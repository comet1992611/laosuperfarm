# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.3.8-stretch
        environment:
          - PGHOST: 127.0.0.1
          - PGUSER: postgres
          - RAILS_ENV: test
          - JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64/
      - image: xcgd/libreoffice
      - image: redis
      - image: mdillon/postgis:9.6
        environment:
          - POSTGRES_USER: postgres
          - PGUSER: postgres
          - POSTGRES_DB: ekylibre_test
          - POSTGRES_PASSWORD=

    working_directory: ~/repo

    steps:
      - checkout

      # Packages dependencies TODO: move to docker image?
      - run: sudo apt-get install openjdk-8-jdk
      - run: sudo apt-get install libproj-dev libgeos-dev
      - run: sudo apt-get install pdftk
      - run: sudo apt-get install graphicsmagick
      - run: sudo apt-get install tesseract-ocr tesseract-ocr-fra tesseract-ocr-eng tesseract-ocr-spa
      - run: sudo apt-get install poppler-utils poppler-data
      - run: sudo apt-get install qt5-default libqt5webkit5-dev gstreamer1.0-x gstreamer1.0-tools gstreamer1.0-plugins-base

      # Install postgres extensions
      - run: sudo apt install -y postgresql-client || true
      - run: psql -U postgres -d ekylibre_test -c 'CREATE SCHEMA IF NOT EXISTS postgis;'
      - run: psql -U postgres -d ekylibre_test -c 'CREATE EXTENSION IF NOT EXISTS postgis SCHEMA postgis;'
      - run: psql -U postgres -d ekylibre_test -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp" SCHEMA postgis;'
      - run: psql -U postgres -d ekylibre_test -c 'CREATE EXTENSION IF NOT EXISTS "unaccent" SCHEMA postgis;'


      # Set test database.yml config
      - run: cp -f test/ci/database.yml config/database.yml

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --full-index --without development --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:test:load_structure
      - run: bundle exec rake db:migrate RAILS_ENV=test VERBOSE=false

      # run tests!
      - run:
          name: run tests
          command: |
            bundle exec rake test:models test:libs test:controllers

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
